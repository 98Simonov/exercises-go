---

name: Разбор Hello World
theory: |

  Разберем программу Hello world из предыдущего урока:

  ```
  // Определение пакета main
  package main
  // Импорт пакета fmt
  import "fmt"
  // Определение функции main
  func main() {
    // Вызов функции Print из пакета fmt
    // Отступ 1 таб
    fmt.Print("Hello, World!") // В конце не нужна точка с запятой
  }
  ```

  Сначала мы определили пакет `main`:

  ```
  package main
  ```

  Пакеты выполняют роль неймспейсов и используются для группировки функций. Все Go файлы начинаются с объявления пакета, к которому они относятся. Внутри одного пакета может быть множество функций.

  Вся логика описывается в функции `main`:

  ```
  func main() {
      ...
  }
  ```

  `main` - главная функция, которая выполняется при запуске любой Go-программы и является точкой входа в программу. Она не может принимать или возвращать какие-либо аргументы.

  Мы использовали внешний пакет `fmt`, чтобы вывести строку в терминал

  ```
  import "fmt"
  ```

  Импорт сторонних пакетов описывается словом `import`. Блок импортов распологается в начале Go-файла сразу после названия пакета.

  После импорта мы можем вызывать функции пакета в своем коде.

  ```
  fmt.Print("Hello, World!")
  ```

  Сторонний пакет — не объект, а просто неймспейс, и мы можем использовать его только как префикс к функциям. Обращение к функции внешнего пакета происходит через точку. Функции, как и во многих языках, вызываются через скобки и передачу аргумента внутрь. 

  Вы могли обратить внимание, что функция `Print` написана с большой буквы, а `main` с маленькой. В Go функция публична, если ее первая буква заглавная. Публичность или экспортируемость означает, что мы можем использовать эту функцию в других пакетах. С другой стороны, если функция начинается с маленькой буквы, то является приватной и может использоваться только внутри пакета. Функция `fmt.Print` публичная, поэтому мы можем ее вызывать в своем коде. А функция `main` приватная, и она доступна только в рамках нашего пакета `main`.

  Рассмотрим аргумент `"Hello, world!"`. Строки объявляются в двойных кавычках практически всегда. Существует еще один способ описать многострочную строку через обратную кавычку `\``, но это используется в исключительных ситуациях. Пока можно не заморачиваться об этом и использовать только двойные.

  Одной из особенностей языка Go является отсутствие точек с запятыми. У вас должны быть правильные переносы строк и отступы табами, а не пробелами, чтобы компилятор понял ваш код. К счастью, в работе вас это не коснется, потому что в языке есть встроенная тулза для форматирования кода. Ссылку на тулзу вы найдете в конце урока в разделе `Tips`.

instructions: |
  Напишите функцию `main`, которая выводит на экран строчку "Hello, Friend!".

tips:
  - |
    [Go fmt tool](https://blog.golang.org/gofmt)
